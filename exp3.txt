Name:Manav Uttekar
Rollno:11
Title: Write C++ program to draw the following pattern. Use DDA line and Bresenham‘s circle drawing algorithm. Apply the concept of encapsulation.







#include <graphics.h>
#include <iostream>
#include <cmath>
using namespace std;

void drawCircle(int xc, int yc, int x, int y) {
    putpixel(xc + x, yc + y, WHITE);
    putpixel(xc - x, yc + y, WHITE);
    putpixel(xc + x, yc - y, WHITE);
    putpixel(xc - x, yc - y, WHITE);
    putpixel(xc + y, yc + x, WHITE);
    putpixel(xc - y, yc + x, WHITE);
    putpixel(xc + y, yc - x, WHITE);
    putpixel(xc - y, yc - x, WHITE);
}

void circleBres(int xc, int yc, int r) {
    int x = 0, y = r;
    int d = 3 - 2 * r;
    drawCircle(xc, yc, x, y);
    while (y >= x) {
        x++;
        if (d > 0) {
            y--;
            d = d + 4 * (x - y) + 10;
        } else {
            d = d + 4 * x + 6;
        }
        drawCircle(xc, yc, x, y);
        delay(50);
    }
}

void drawTriangle(int xc, int yc, int r) {
    int x1 = xc, y1 = yc - r;
    int x2 = xc - (r * sqrt(3) / 2), y2 = yc + (r / 2);
    int x3 = xc + (r * sqrt(3) / 2), y3 = yc + (r / 2);

    line(x1, y1, x2, y2);
    line(x2, y2, x3, y3);
    line(x3, y3, x1, y1);
}

int main() {
    int gd = DETECT, gm;
    initgraph(&gd, &gm, "");

    int xc, yc, r;
    cout << "Enter the center coordinates (xc, yc): ";
    cin >> xc >> yc;
    cout << "Enter the radius: ";
    cin >> r;

    circleBres(xc, yc, r);      // Outer circle
    drawTriangle(xc, yc, r);    // Equilateral triangle inside circle
    circleBres(xc, yc, r / 2);  // Inner circle

    getch();
    closegraph();
    return 0;
}


